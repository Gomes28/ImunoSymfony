a:25:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:333:"Method "Symfony\Component\DependencyInjection\Extension\ExtensionInterface::load()" might add "void" as a native return type declaration in the future. Do the same in implementation "Twig\Extra\TwigExtraBundle\DependencyInjection\TwigExtraExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:99:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/http-kernel/Bundle/Bundle.php";s:4:"line";i:143;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:352:"Method "Symfony\Component\DependencyInjection\Extension\ExtensionInterface::load()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\SensioFrameworkExtraExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:99:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/http-kernel/Bundle/Bundle.php";s:4:"line";i:143;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:344:"Method "Symfony\Component\DependencyInjection\Extension\ExtensionInterface::load()" might add "void" as a native return type declaration in the future. Do the same in implementation "Doctrine\Bundle\FixturesBundle\DependencyInjection\DoctrineFixturesExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:99:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/http-kernel/Bundle/Bundle.php";s:4:"line";i:143;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:358:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Twig\Extra\TwigExtraBundle\DependencyInjection\Compiler\MissingExtensionSuggestorPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:92:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:42:"Twig\Extra\TwigExtraBundle\TwigExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:358:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddParamConverterPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:92:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:350:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\OptimizerPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:92:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:371:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddExpressionLanguageProvidersPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:92:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:300:"Method "Symfony\Component\Security\Core\User\UserCheckerInterface::checkPreAuth()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Security\Checkers\UserChecker" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:16384;s:7:"message";s:266:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Twig\CartExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:16384;s:7:"message";s:301:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\ConvertMappingCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:128:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/doctrine/doctrine-bundle/DependencyInjection/DoctrineExtension.php";s:4:"line";i:473;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:16384;s:7:"message";s:311:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\EnsureProductionSettingsCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:128:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/doctrine/doctrine-bundle/DependencyInjection/DoctrineExtension.php";s:4:"line";i:477;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:16384;s:7:"message";s:306:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\ClearCache\MetadataCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\ClearCache\QueryCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:14;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\ClearCache\ResultCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:15;a:6:{s:4:"type";i:16384;s:7:"message";s:314:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\ClearCache\CollectionRegionCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:16;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\SchemaTool\CreateCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:17;a:6:{s:4:"type";i:16384;s:7:"message";s:302:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\SchemaTool\DropCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:18;a:6:{s:4:"type";i:16384;s:7:"message";s:310:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\ClearCache\EntityRegionCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:19;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\InfoCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:20;a:6:{s:4:"type";i:16384;s:7:"message";s:309:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\ClearCache\QueryRegionCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:21;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\RunDqlCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:22;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\SchemaTool\UpdateCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:23;a:6:{s:4:"type";i:16384;s:7:"message";s:301:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\ORM\Tools\Console\Command\ValidateSchemaCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:24;a:6:{s:4:"type";i:16384;s:7:"message";s:315:"Method "Symfony\Component\Console\Command\Command::configure()" might add "void" as a native return type declaration in the future. Do the same in child class "Doctrine\Bundle\FixturesBundle\Command\LoadDataFixturesDoctrineCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:104:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Users/matheus/Documents/Projetos/my_project_directory/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}}