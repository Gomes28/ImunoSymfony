security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_admin_provider:
            entity:
                class: App\Entity\Admin
                property: email
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        front:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_user_login
                check_path: app_user_login
            pattern: ^/
            logout:
                path: app_logout
        admin:
            lazy: true
            provider: app_admin_provider
            custom_authenticator: App\Security\AppAdminAuthenticator
            pattern: ^/admin/
            logout:
                path: app_admin_logout
                # where to redirect after logout
                target: app_login_admin

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: /login, roles: PUBLIC_ACCESS }
        - { path: /signup, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/cliente, roles: ROLE_USER }
        - { path: /, roles: PUBLIC_ACCESS }
        - { path: /admin/login, roles: PUBLIC_ACCESS }
        - { path: '/cart/add/{productId}/{quantity}', roles: ROLE_USER }
        - { path: /cart/view, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
